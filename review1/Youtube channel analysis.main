{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "82c754d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HARSHIT TRIPATHI\\AppData\\Local\\Temp\\ipykernel_22180\\3336562545.py:2: DeprecationWarning: \n",
      "Pyarrow will become a required dependency of pandas in the next major release of pandas (pandas 3.0),\n",
      "(to allow more performant data types, such as the Arrow string type, and better interoperability with other libraries)\n",
      "but was not found to be installed on your system.\n",
      "If this would cause problems for you,\n",
      "please provide us feedback at https://github.com/pandas-dev/pandas/issues/54466\n",
      "        \n",
      "  import pandas as pd\n",
      "c:\\Users\\HARSHIT TRIPATHI\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\scipy\\__init__.py:169: UserWarning: A NumPy version >=1.18.5 and <1.26.0 is required for this version of SciPy (detected version 1.26.3\n",
      "  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n"
     ]
    }
   ],
   "source": [
    "from googleapiclient.discovery import build\n",
    "import pandas as pd\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "64a8ce37",
   "metadata": {},
   "outputs": [],
   "source": [
    "api_key = 'AIzaSyBVA5e4D0uU_PsjkhvY9jtHvTuyeIPpXRw'\n",
    "#channel_id = 'UCnz-ZXXER4jOvuED5trXfEA'\n",
    "channel_ids = ['UCPMr_Uk6lJoEOYRhjRrTBvQ', # Pratyaksh\n",
    "               'UCLLw7jmFsvfIVaUFsLs8mlQ', \n",
    "            #    'UCiT9RITQ9PW6BhXK0y2jaeg', \n",
    "            #    'UC7cs8q-gJRlGwj4A8OmCmXg', \n",
    "            #    'UC2UXDak6o7rBm23k3Vv5dww'\n",
    "           'UCJskGeByzRRSvmOyZOz61ig' \n",
    "              ]\n",
    "\n",
    "youtube = build('youtube', 'v3', developerKey=api_key)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d96fcaa",
   "metadata": {},
   "source": [
    "## Function to get channel statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bacbf3f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_channel_stats(youtube, channel_ids):\n",
    "    all_data = []\n",
    "    request = youtube.channels().list(\n",
    "                part='snippet,contentDetails,statistics',\n",
    "                id=','.join(channel_ids))\n",
    "    response = request.execute() \n",
    "    \n",
    "    for i in range(len(response['items'])):\n",
    "        data = dict(Channel_name = response['items'][i]['snippet']['title'],\n",
    "                    Subscribers = response['items'][i]['statistics']['subscriberCount'],\n",
    "                    Views = response['items'][i]['statistics']['viewCount'],\n",
    "                    Total_videos = response['items'][i]['statistics']['videoCount'],\n",
    "                    playlist_id = response['items'][i]['contentDetails']['relatedPlaylists']['uploads'])\n",
    "        all_data.append(data)\n",
    "    \n",
    "    return all_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e596dc28",
   "metadata": {},
   "outputs": [],
   "source": [
    "channel_statistics = get_channel_stats(youtube, channel_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9ee879bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "channel_data = pd.DataFrame(channel_statistics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "153d9303",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Channel_name</th>\n",
       "      <th>Subscribers</th>\n",
       "      <th>Views</th>\n",
       "      <th>Total_videos</th>\n",
       "      <th>playlist_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Luke Barousse</td>\n",
       "      <td>406000</td>\n",
       "      <td>19995609</td>\n",
       "      <td>151</td>\n",
       "      <td>UULLw7jmFsvfIVaUFsLs8mlQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Pratyaksh</td>\n",
       "      <td>13800</td>\n",
       "      <td>4409474</td>\n",
       "      <td>164</td>\n",
       "      <td>UUPMr_Uk6lJoEOYRhjRrTBvQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>take U forward</td>\n",
       "      <td>485000</td>\n",
       "      <td>59166254</td>\n",
       "      <td>473</td>\n",
       "      <td>UUJskGeByzRRSvmOyZOz61ig</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Channel_name Subscribers     Views Total_videos               playlist_id\n",
       "0   Luke Barousse      406000  19995609          151  UULLw7jmFsvfIVaUFsLs8mlQ\n",
       "1      Pratyaksh        13800   4409474          164  UUPMr_Uk6lJoEOYRhjRrTBvQ\n",
       "2  take U forward      485000  59166254          473  UUJskGeByzRRSvmOyZOz61ig"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "channel_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a8a9ab78",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Channel_name    object\n",
       "Subscribers      int64\n",
       "Views            int64\n",
       "Total_videos     int64\n",
       "playlist_id     object\n",
       "dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "channel_data['Subscribers'] = pd.to_numeric(channel_data['Subscribers'])\n",
    "channel_data['Views'] = pd.to_numeric(channel_data['Views'])\n",
    "channel_data['Total_videos'] = pd.to_numeric(channel_data['Total_videos'])\n",
    "channel_data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f416d4f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(rc={'figure.figsize':(10,8)})\n",
    "ax = sns.barplot(x='Channel_name', y='Subscribers', data=channel_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4987f22f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.barplot(x='Channel_name', y='Views', data=channel_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "48dbe64a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.barplot(x='Channel_name', y='Total_videos', data=channel_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0aee6e25",
   "metadata": {},
   "source": [
    "## Function to get video ids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "98ddb122",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Channel_name</th>\n",
       "      <th>Subscribers</th>\n",
       "      <th>Views</th>\n",
       "      <th>Total_videos</th>\n",
       "      <th>playlist_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Luke Barousse</td>\n",
       "      <td>406000</td>\n",
       "      <td>19995609</td>\n",
       "      <td>151</td>\n",
       "      <td>UULLw7jmFsvfIVaUFsLs8mlQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Pratyaksh</td>\n",
       "      <td>13800</td>\n",
       "      <td>4409474</td>\n",
       "      <td>164</td>\n",
       "      <td>UUPMr_Uk6lJoEOYRhjRrTBvQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>take U forward</td>\n",
       "      <td>485000</td>\n",
       "      <td>59166254</td>\n",
       "      <td>473</td>\n",
       "      <td>UUJskGeByzRRSvmOyZOz61ig</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Channel_name  Subscribers     Views  Total_videos  \\\n",
       "0   Luke Barousse       406000  19995609           151   \n",
       "1      Pratyaksh         13800   4409474           164   \n",
       "2  take U forward       485000  59166254           473   \n",
       "\n",
       "                playlist_id  \n",
       "0  UULLw7jmFsvfIVaUFsLs8mlQ  \n",
       "1  UUPMr_Uk6lJoEOYRhjRrTBvQ  \n",
       "2  UUJskGeByzRRSvmOyZOz61ig  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "channel_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "82736d10",
   "metadata": {},
   "outputs": [],
   "source": [
    "playlist_id = channel_data.loc[channel_data['Channel_name']=='take U forward', 'playlist_id'].iloc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "16a7f31d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_video_ids(youtube, playlist_id):\n",
    "    \n",
    "    request = youtube.playlistItems().list(\n",
    "                part='contentDetails',\n",
    "                playlistId = playlist_id,\n",
    "                maxResults = 50)\n",
    "    response = request.execute()\n",
    "    \n",
    "    video_ids = []\n",
    "    \n",
    "    for i in range(len(response['items'])):\n",
    "        video_ids.append(response['items'][i]['contentDetails']['videoId'])\n",
    "        \n",
    "    next_page_token = response.get('nextPageToken')\n",
    "    more_pages = True\n",
    "    \n",
    "    while more_pages:\n",
    "        if next_page_token is None:\n",
    "            more_pages = False\n",
    "        else:\n",
    "            request = youtube.playlistItems().list(\n",
    "                        part='contentDetails',\n",
    "                        playlistId = playlist_id,\n",
    "                        maxResults = 50,\n",
    "                        pageToken = next_page_token)\n",
    "            response = request.execute()\n",
    "    \n",
    "            for i in range(len(response['items'])):\n",
    "                video_ids.append(response['items'][i]['contentDetails']['videoId'])\n",
    "            \n",
    "            next_page_token = response.get('nextPageToken')\n",
    "        \n",
    "    return video_ids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b43d9f6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "video_ids = get_video_ids(youtube, playlist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b494646c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['mG3KLugbOdc',\n",
       " 'q570bKdrnlw',\n",
       " '8ocB7a_c-Cc',\n",
       " 'ykelywHJWLg',\n",
       " '1zktEppsdig',\n",
       " 'jXu-H7XuClE',\n",
       " 'uT7YI7XbTY8',\n",
       " 'lIar1skcQYI',\n",
       " 'YJKVTnOJXSY',\n",
       " 'YitR4dQsddE',\n",
       " 'Mh0NH_SD92k',\n",
       " '2Kd0KKmmHFc',\n",
       " 'ePpV-_pfOeI',\n",
       " 'I4g1qbkTPus',\n",
       " 'wiOo4DC5GGA',\n",
       " '7LjQ57RqgEc',\n",
       " '0DYoPz2Tpt4',\n",
       " 'aXQWhbvT3w0',\n",
       " 'lRY_G-u_8jk',\n",
       " 'D2vI2DNJGd8',\n",
       " '3kMKYQ2wNIU',\n",
       " 'gRII7LhdJWc',\n",
       " 'qf6qp7GzD5Q',\n",
       " 'XmRrGzR6udg',\n",
       " 'u3WUW2qe6ww',\n",
       " '0eKMU10uEDI',\n",
       " 'VaECK03Dz-g',\n",
       " 'Nq7ok-OyEpg',\n",
       " 'cg6JGiXhQ9c',\n",
       " 'plG_kKIBD1k',\n",
       " 'UoMsWjrr7Zw',\n",
       " 'h3uDCJ5mvgw',\n",
       " 'kqQ92i_iTPI',\n",
       " 'Q9wXgdxJq48',\n",
       " 'nGGp5XBzC4g',\n",
       " 'sUeVg08RMes',\n",
       " '9ZbB397jU4k',\n",
       " 'JXU4Akft7yk',\n",
       " 'SCz-1TtYxDI',\n",
       " 'D1oDwWCq50g',\n",
       " 'C2rRzz-JDk8',\n",
       " 'F9c7LpRZWVQ',\n",
       " 'kMSBvlZ-_HA',\n",
       " 'thUd_WJn6wk',\n",
       " '-ewcrjP78zY',\n",
       " 'Z0hwjftStI4',\n",
       " 'R_Mfw4ew-Vo',\n",
       " 'uZ0N_hZpyps',\n",
       " 'MG-Ac4TAvTY',\n",
       " 'UvBKTVaG6U8',\n",
       " 'TXAuxeYBTdg',\n",
       " 'qyfekrNni90',\n",
       " 'rjEJeYCasHs',\n",
       " 'Bsv3FPUX_BA',\n",
       " 'cXxmbemS6XM',\n",
       " '_2iQOQiCzOM',\n",
       " 'AZOmHuHadxQ',\n",
       " 'jtSiWTPLwd0',\n",
       " 'nhEMDKMB44g',\n",
       " 'w2G2W8l__pc',\n",
       " '5qGrJbHhqFs',\n",
       " 'hjR1IYVx9lY',\n",
       " '6zhGS79oQ4k',\n",
       " 'MHf6awe89xw',\n",
       " '_NT69eLpqks',\n",
       " 'hnswaLJvr6g',\n",
       " '0e4bZaP3MDI',\n",
       " 'AseUmwVNaoY',\n",
       " '2ov2MtOKC10',\n",
       " 'zxIaE_5_jl4',\n",
       " '2D0D8HE6uak',\n",
       " '0ADWhxoxzSQ',\n",
       " 'n7uwj04E0I4',\n",
       " 'IexN60k62jo',\n",
       " 'eZr-6p0B7ME',\n",
       " '6aGNKzh23Lw',\n",
       " 'eD95WRfh81c',\n",
       " 'worGgFJA1m0',\n",
       " 'DhFh8Kw7ymk',\n",
       " 'EPx-ZDciIpc',\n",
       " 'vwZj1K0e9U8',\n",
       " 'DTDWwLSmRBk',\n",
       " 'Wsys6ThsAO0',\n",
       " 'bR7mQgwQ_o8',\n",
       " 'AajeP_e_-oU',\n",
       " 'xvNwoz-ufXA',\n",
       " '3Zv-s9UUrFM',\n",
       " 'Z0R2u6gd3GU',\n",
       " 'N0MgLvceX7M',\n",
       " 'oO5uLE7EUlM',\n",
       " 'LSd6yCRsIvs',\n",
       " 'cHrH9CQ8pmY',\n",
       " 'JDOXKqF60RQ',\n",
       " 'h4aBagy4Uok',\n",
       " 'AHZpyENo7k4',\n",
       " 'nP_ns3uSh80',\n",
       " 'tp8JIuCXBaU',\n",
       " 'UXDSeD9mN-k',\n",
       " 'frf7qxiN2qU',\n",
       " 'TKeTRUlCtqg',\n",
       " 'bYWLJb3vCWY',\n",
       " 'wvcQg43_V8U',\n",
       " '37E9ckMDdTk',\n",
       " 'WIrA4YexLRQ',\n",
       " 'ogjf7ORKfd8',\n",
       " 'HGk_ypEuS24',\n",
       " 'KEs5UyBJ39g',\n",
       " '1xNbjMdbjug',\n",
       " 'tNm_NNSB3_w',\n",
       " 'FPu9Uld7W-E',\n",
       " 'EAR7De6Goz4',\n",
       " 'j1QDfU21iZk',\n",
       " 'qrAub5z8FeA',\n",
       " 'R6uoSjZ2imo',\n",
       " 'OwMNX8SPavM',\n",
       " 'lgiz0Oup6gM',\n",
       " 'Rn6B-Q4SNyA',\n",
       " 'FMwpt_aQOGw',\n",
       " 'FYrl7iz9_ZU',\n",
       " 'DMnDM_sxVig',\n",
       " 'ZGr5nX-Gi6Y',\n",
       " 'aBxjDBC4M1U',\n",
       " 'PwMVNSJ5SLI',\n",
       " 'mJcZjjKzeqk',\n",
       " 'ZSPjZuZWCME',\n",
       " 'YbY8cVwWAvw',\n",
       " '0vVofAhAYjc',\n",
       " '_-0mx0SmYxA',\n",
       " '_BvEJ3VIDWw',\n",
       " '9XybHVqTHcQ',\n",
       " '0ytpZyiZFhA',\n",
       " 'U5Mw4eyUmw4',\n",
       " 'rp1SMw7HSO8',\n",
       " '3dINsjyfooY',\n",
       " 'PATgNiuTP20',\n",
       " 'V6H1qAeB-l4',\n",
       " 'AD4SFl7tu7I',\n",
       " 'DREutrv2XD0',\n",
       " 'tRPda0rcf8E',\n",
       " 'C4gxoTaI71U',\n",
       " 'ZUFQfFaU-8U',\n",
       " 'U3N_je7tWAs',\n",
       " '2gtg3VsDGyc',\n",
       " 'WAOfKpxYHR8',\n",
       " 'iTBaI90lpDQ',\n",
       " '73sneFXuTEg',\n",
       " '5lZ0iJMrUMk',\n",
       " 'uRbJ1OF9aYM',\n",
       " '9twcmtQj4DU',\n",
       " 'KG5YFfR0j8A',\n",
       " '-vu34sct1g8',\n",
       " '7zmgQSJghpo',\n",
       " 'rxKcepXQgU4',\n",
       " 'BtdgAys4yMk',\n",
       " 'edXdVwkYHF8',\n",
       " 'zQ3zgFypzX4',\n",
       " 'BPlrALf1LDU',\n",
       " 'yf3oUhkvqA0',\n",
       " 'muncqlKJrH0',\n",
       " 'C-2_uSRli8o',\n",
       " 'ACzkVtewUYA',\n",
       " 'Qzf1a--rhp8',\n",
       " '-tgVpUgsQ5k',\n",
       " 'lea-Wl_uWXY',\n",
       " 'OsNklbh9gYI',\n",
       " '3oI-34aPMWM',\n",
       " 'M3_pLsDdeuU',\n",
       " 'RRVYpIET_RU',\n",
       " 'auS1fynpnjo',\n",
       " 'tOylVCugy9k',\n",
       " 'PhWWJmaKfMc',\n",
       " '_H8V5hJUGd0',\n",
       " 'MM7fXopgyjw',\n",
       " 'Yz4LlDSlkns',\n",
       " 'xwomavsC86c',\n",
       " 'cKVl1TFdNXg',\n",
       " 'y4vN0WNdrlg',\n",
       " 'ig_AG6xM5ro',\n",
       " 'YY8iBaYcc4g',\n",
       " 'gDuZwBW9VvM',\n",
       " 'on2hvxBXJH4',\n",
       " 'IFfYfonAFGc',\n",
       " 'ekcwMsSIzVc',\n",
       " 'A98psR_mIMQ',\n",
       " 'k4eK-vEmnKg',\n",
       " 'IGIe46xw3YY',\n",
       " 'IV1dHbk5CDc',\n",
       " '-uQGzhYj8BQ',\n",
       " 'nGJmxkUJQGs',\n",
       " 'excAOvwF_Wk',\n",
       " 'ZmlQ3vgAOMo',\n",
       " 'qf_FBG3pcm4',\n",
       " 'atJEufAlcVo',\n",
       " 'fJaKO8FbDdo',\n",
       " 'nVG7eTiD2bY',\n",
       " 'xElxAuBcvsU',\n",
       " 'yMnH0jrir0Q',\n",
       " 'xPBLEj41rFU',\n",
       " '6i_T5kkfv4A',\n",
       " '_wP9mWNPL5w',\n",
       " '-zI4mrF2Pb4',\n",
       " 'NPZn9jBrX8U',\n",
       " 'h1JMSPLZ9qA',\n",
       " 'pDCXsbAw5Cg',\n",
       " 'vRVfmbCFW7Y',\n",
       " 'qOXUa_OQXI4',\n",
       " 'khFetYmKf-4',\n",
       " '_w_EQJUzFow',\n",
       " 'mO8XpGoJwuo',\n",
       " 'OgvOZ6OrJoY',\n",
       " 'HgyouUi11zk',\n",
       " 'k8I7F8ImzcI',\n",
       " 'b3GD8263-PQ',\n",
       " 'myPeWb3Y68A',\n",
       " 'GqOmJHQZivw',\n",
       " 'zoilQD1kYSg',\n",
       " 'k2iS5t78N4Q',\n",
       " 'hq12oFTjnVY',\n",
       " 'ZHyb-A2Mte4',\n",
       " 'yJ-G3t0rSUU',\n",
       " 'GS_OqZb2CWc',\n",
       " '7win3dcgo3k',\n",
       " 'fWX9xDmIzRI',\n",
       " 'QGfn7JeXK54',\n",
       " 'N_aJ5qQbYA0',\n",
       " 'SrP-PiLSYC0',\n",
       " '_rgTlyky1uQ',\n",
       " 'TmhpgXScLyY',\n",
       " 'sdE0A2Oxofw',\n",
       " 'AE39gJYuRog',\n",
       " '3WaxQMELSkw',\n",
       " 'GrMBfJNk_NY',\n",
       " 'Kmh3rhyEtB8',\n",
       " 'EgG3jsGoPvQ',\n",
       " 'mLfjzJsN8us',\n",
       " 'tyB0ztf0DNY',\n",
       " 'FfXoiwwnxFw',\n",
       " 'eQCS_v3bw0Q',\n",
       " 'AxNNVECce8c',\n",
       " 'kvRjNm4rVBE',\n",
       " 'twuC1F6gLI8',\n",
       " '69ZCDFy-OUo',\n",
       " 'un6PLygfXrA',\n",
       " 'yVdKa8dnKiE',\n",
       " 'Q8LhG9Pi5KM',\n",
       " 'EIhAwfHubE8',\n",
       " 'wTeebkKg-Cs',\n",
       " '5iyuU4hQFrw',\n",
       " 'RV0QeTyHZxo',\n",
       " 'AWnBa91lThI',\n",
       " 'K5pcpkEMCN0',\n",
       " 'dBGUmUQhjaM',\n",
       " 'X0oXMdtUDwo',\n",
       " 'ZWGW7FminDM',\n",
       " 'ssL3sHwPeb4',\n",
       " 'D2jMcmxU4bs',\n",
       " 'SXKAD2svfmI',\n",
       " 'UmJT3j26t1I',\n",
       " 'cX_kPV_foZc',\n",
       " 'f-sj7I5oXEI',\n",
       " '9TJYWh0adfk',\n",
       " '6Hcwdvl7Q08',\n",
       " 'x77evbRyX4A',\n",
       " 'xm_W1ub-K-w',\n",
       " 'kouxiP_H5WE',\n",
       " 'KcNt6v_56cc',\n",
       " 'KSsk8AhdOZA',\n",
       " 'FiFiNvM29ps',\n",
       " 'p7-9UvDQZ3w',\n",
       " 'sWf7k1x9XR4',\n",
       " '80Zug6D1_r4',\n",
       " '-YbXySKJsX8',\n",
       " 'LgLRTaEMRVc',\n",
       " 'aZNaLrVebKQ',\n",
       " '9GMECGQgWrQ',\n",
       " 'u-yWemKGWO0',\n",
       " '2r5wLmQfD6g',\n",
       " 'i9ORlEy6EsI',\n",
       " 'fnmisPM6cVo',\n",
       " 'ZbybYvcVLks',\n",
       " '_-QHfMDde90',\n",
       " 'fmflMqVOC7k',\n",
       " 'nKggNAiEpBE',\n",
       " 'KV4mRzTjlAk',\n",
       " '0FtVY6I4pB8',\n",
       " 'Et9OCDNvJ78',\n",
       " 'q_a6lpbKJdw',\n",
       " '0ca1nvR0be4',\n",
       " '3OXWEdlIGl4',\n",
       " 'BhuvF_-PWS0',\n",
       " 'WszrfSwMz58',\n",
       " 'Rezetez59Nk',\n",
       " 'Yt50Jfbd8Po',\n",
       " 'eD3tmO66aBA',\n",
       " 'ySp2epYvgTE',\n",
       " 'NzIGLLwZBS8',\n",
       " '2YBhNLodD8Q',\n",
       " 'lxTGsVXjwvM',\n",
       " 'Bfqd8BsPVuw',\n",
       " 'EoAsWbO7sqg',\n",
       " 'COQOU6klsBg',\n",
       " 'Z_NEgBgbRVI',\n",
       " 'RlUu72JrOCQ',\n",
       " 'jmy0LaGET1I',\n",
       " 'hyLyW7rP24I',\n",
       " 'ctCpP0RFDFc',\n",
       " '_ANrF3FJm7I',\n",
       " 'OYqYEM1bMK8',\n",
       " 'pUAPcVlHLKA',\n",
       " 'V09NfaGf2ao',\n",
       " 'CZQGRp93K4k',\n",
       " 'jC_cWLy7jSI',\n",
       " 'X0X6G-eWgQ8',\n",
       " 'mzqHlAW7jeE',\n",
       " '0PSB9y8ehbk',\n",
       " 'Xc4sICC8m4M',\n",
       " 'xDEuM5qa0zg',\n",
       " 'Du881K7Jtk8',\n",
       " 'wkDfsKijrZ8',\n",
       " '3Et9MrMc02A',\n",
       " 'jDZQKzEtbYQ',\n",
       " 'M6GnoUDpqEE',\n",
       " 'wSOfYesTBRk',\n",
       " 'gYmWHvRHu-s',\n",
       " 'GYptUgnIM_I',\n",
       " 'b7AYbpM5YrE',\n",
       " 'nv7F4PiLUzo',\n",
       " 'NTop3VTjmxk',\n",
       " 'r3pMQ8-Ad5s',\n",
       " 'PzszoiY5XMQ',\n",
       " '63fPPOdIr2c',\n",
       " 'WjpswYrS2nY',\n",
       " 'bLGZhJlt4y0',\n",
       " 'wuVwUK25Rfc',\n",
       " 'FWAIf_EVUKE',\n",
       " 'i05Ju7AftcM',\n",
       " 'V8qIqJxCioo',\n",
       " '75yC1vbS8S8',\n",
       " '2rjZH0-2lhk',\n",
       " '3t3JHswP7mw',\n",
       " 'oNTsS8lGDHw',\n",
       " '1KRmCzBl_mQ',\n",
       " '8KPEROaLK-0',\n",
       " 'HnD676J56ak',\n",
       " '3gbO7FDYNFQ',\n",
       " 'jbhuqIASjoM',\n",
       " 'xsM8i0jVF1w',\n",
       " 'CrxG4WJotgg',\n",
       " 'V6GxfKDyLBM',\n",
       " 'hwCWi7-bRfI',\n",
       " 'uC884ske2uQ',\n",
       " 'uzVUw90ZFIg',\n",
       " 'rZv_jHZva34',\n",
       " 'nbgaEu-pvkU',\n",
       " 'Yh6EFazXipA',\n",
       " 'A8ko93TyOns',\n",
       " 'bTtm2ky7I3Y',\n",
       " 'uDWljP2PGmU',\n",
       " 'Y9NFqI6Pzd4',\n",
       " 'I6v0itcISSY',\n",
       " 'OffNesBSRA4',\n",
       " 'UeE67iCK2lQ',\n",
       " 'LCrovIMurxY',\n",
       " 'YTtpfjGlH2M',\n",
       " 'f2ic2Rsc9pU',\n",
       " 'YK78FU5Ffjw',\n",
       " 'wT7gcXLYoao',\n",
       " 'RIn3gOkbhQE',\n",
       " 'QmjRANxQkag',\n",
       " 'rYkfBRtMJr8',\n",
       " 'WBgsABoClE0',\n",
       " 'G1fRTGRxXU8',\n",
       " 'OyZFFqQtu98',\n",
       " 'mVg9CfJvayM',\n",
       " 'F_DDzYnxO14',\n",
       " 'LjPx4wQaRIs',\n",
       " 'YTbLKlRJ9hA',\n",
       " 'dxVcMDI7vyI',\n",
       " 'II6ziNnub1Q',\n",
       " 'Mo33MjjMlyA',\n",
       " 'Fm_p9lJ4Z_8',\n",
       " 'm18Hntz4go8',\n",
       " 'onLoX6Nhvmg',\n",
       " 'VNf6VynfpdM',\n",
       " '9VPm6nEbVPA',\n",
       " 'ysytSSXpAI0',\n",
       " 'QfbOhn0WZ88',\n",
       " 'QtTPohzfxA8',\n",
       " 'Of0HPkk3JgI',\n",
       " 'G563FwjzjcQ',\n",
       " '-DtNInqFUXs',\n",
       " '354J83hX7RI',\n",
       " 'u4FWXfgS8jw',\n",
       " 'MPmIP-N9ok4',\n",
       " 'S2YI72muryA',\n",
       " 'LBVsXSMOIk4',\n",
       " 'icnp4FJdZ_c',\n",
       " 'Lhu3MsXZy-Q',\n",
       " 'Xb4slcp1U38',\n",
       " 'sGdwSH8RK-o',\n",
       " 'iRtLEoL-r-g',\n",
       " 'c0_1QnyVYQY',\n",
       " 'qtVh-XEpsJo',\n",
       " 'lO9R5CaGRPY',\n",
       " 'xmguZ6GbatA',\n",
       " 'qgizvmgeyUM',\n",
       " '4ggF3tXIAp0',\n",
       " 'ZZUt37ZZNMs',\n",
       " 'dRUpbt8vHpo',\n",
       " 'S6rsAlj_iB4',\n",
       " 'vF1X08F9NNY',\n",
       " 't_f0nwwdg5o',\n",
       " 'yDbkQd9t2ig',\n",
       " 'AoX3BPWNnoE',\n",
       " 'l0YC3876qxg',\n",
       " 'ZYpYur0znng',\n",
       " 'Y72QeX0Efxw',\n",
       " 'eMSfBgbiEjk',\n",
       " 'kQ1mJlwW-c0',\n",
       " 'LuLCLgMElus',\n",
       " '6FLvhQjZqvM',\n",
       " 'VLeZpInU3SM',\n",
       " 'M65xBewcqcI',\n",
       " '2JzRBPFYbKE',\n",
       " 'w_KEocd__20',\n",
       " 'hVl2b3bLzBw',\n",
       " '5nMGY4VUoRY',\n",
       " 'oaVa-9wmpns',\n",
       " '32Ll35mhWg0',\n",
       " 'Okp8V2K0g_w',\n",
       " 'rwXVCELcrqU',\n",
       " 'VONr7CG7Xms',\n",
       " 'R0PnosalEMc',\n",
       " '-dUiRtJ8ot0',\n",
       " '5wEPVlmZ-n8',\n",
       " 'p1iJW27KZJM',\n",
       " 'xkB9JZZ9Ixc',\n",
       " 'WNtzUR_MwUQ',\n",
       " 'zZOQVLll9u4',\n",
       " 'JnGwOVE16-g',\n",
       " '7MTpY-kbX74',\n",
       " 'UVVJOOPFC2E',\n",
       " 'imHu-B73MlI',\n",
       " 'fgEe-iPdqeI',\n",
       " 'nuUspQ7ORXE',\n",
       " '9uaXG62Y8Uw',\n",
       " 'PojcB2itm0Y',\n",
       " 'Z-gBO2i2LhA',\n",
       " 'zBQzocZwEZk',\n",
       " '834XSKZKn5I',\n",
       " '7jmY0-yy-Tk',\n",
       " 'Z9jEFjHFE0o',\n",
       " 'aFNR6bGCrhU',\n",
       " 'SvVXRtv5jsk',\n",
       " 'X0Uqm5h6ZRo',\n",
       " 'zBhVZzi5RdU',\n",
       " 'edJ19qIL8WQ',\n",
       " 'MtsNXuHfuxo',\n",
       " 'Tr73ZLZE488',\n",
       " '36R4Kf6dAB4',\n",
       " 's9oXy-fZUzg',\n",
       " 'Ff4Sjgd6l00',\n",
       " 'c_w2LhuiJ1o',\n",
       " '0TmuETwVit4',\n",
       " 'Fql_b-xZYwQ',\n",
       " 'KVJCbNyo48U',\n",
       " 'TSUvGqRFlug',\n",
       " '6IY9kPbzkAI',\n",
       " 'YCOkesE_eN8',\n",
       " 'GAuI71n71Uc',\n",
       " 'Cq_G2kk15U0',\n",
       " 'SWABtcS8SU8',\n",
       " 'TocJOW6vx_I',\n",
       " 'VwylCVAVdmo']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "video_ids"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e4d7269",
   "metadata": {},
   "source": [
    "## Function to get video details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6f0678b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_video_details(youtube, video_ids):\n",
    "    all_video_stats = []\n",
    "    \n",
    "    for i in range(0, len(video_ids), 50):\n",
    "        request = youtube.videos().list(\n",
    "                    part='snippet,statistics',\n",
    "                    id=','.join(video_ids[i:i+50]))\n",
    "        response = request.execute()\n",
    "        \n",
    "        for video in response['items']:\n",
    "            video_stats = dict(Title = video['snippet']['title'],\n",
    "                               Published_date = video['snippet']['publishedAt'],\n",
    "                               Views = video['statistics']['viewCount'],\n",
    "                            #    Likes = video['statistics']['likeCount'],\n",
    "                            #    Dislikes = video['statistics']['dislikeCount'],\n",
    "                               Comments = video['statistics']['commentCount']\n",
    "                               )\n",
    "            all_video_stats.append(video_stats)\n",
    "    \n",
    "    return all_video_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "071b1776",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "video_details = get_video_details(youtube, video_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b6cc7a6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "video_data = pd.DataFrame(video_details)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "92a7816d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Published_date</th>\n",
       "      <th>Views</th>\n",
       "      <th>Comments</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>L28. Design a Browser History | LinkedList Imp...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>15581</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>L27. Clone a LinkedList with Next and Random P...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>4538</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>L26. Sort a Linked List | Merge Sort and Brute...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>6236</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>L24. Flattening a LinkedList | Multiple Approa...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>4971</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>L25. Merge K Sorted Lists | Multiple Approaches</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>3691</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>How to get an internship at Amazon | Internshi...</td>\n",
       "      <td>2020-04-09</td>\n",
       "      <td>130344</td>\n",
       "      <td>258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>How to approach people at Linkedin | How to bu...</td>\n",
       "      <td>2020-04-04</td>\n",
       "      <td>31786</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>Experience with Scaler Academy | More insights...</td>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>170979</td>\n",
       "      <td>607</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>Longest Increasing Subsequence NlogN approach</td>\n",
       "      <td>2020-03-29</td>\n",
       "      <td>66579</td>\n",
       "      <td>141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>Equal Average Partition Dynamic Programming</td>\n",
       "      <td>2020-03-23</td>\n",
       "      <td>21908</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>474 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 Title Published_date   Views  \\\n",
       "0    L28. Design a Browser History | LinkedList Imp...     2024-01-01   15581   \n",
       "1    L27. Clone a LinkedList with Next and Random P...     2024-01-01    4538   \n",
       "2    L26. Sort a Linked List | Merge Sort and Brute...     2024-01-01    6236   \n",
       "3    L24. Flattening a LinkedList | Multiple Approa...     2024-01-01    4971   \n",
       "4      L25. Merge K Sorted Lists | Multiple Approaches     2024-01-01    3691   \n",
       "..                                                 ...            ...     ...   \n",
       "469  How to get an internship at Amazon | Internshi...     2020-04-09  130344   \n",
       "470  How to approach people at Linkedin | How to bu...     2020-04-04   31786   \n",
       "471  Experience with Scaler Academy | More insights...     2020-04-01  170979   \n",
       "472      Longest Increasing Subsequence NlogN approach     2020-03-29   66579   \n",
       "473        Equal Average Partition Dynamic Programming     2020-03-23   21908   \n",
       "\n",
       "    Comments  \n",
       "0         61  \n",
       "1         13  \n",
       "2          9  \n",
       "3         19  \n",
       "4         14  \n",
       "..       ...  \n",
       "469      258  \n",
       "470       74  \n",
       "471      607  \n",
       "472      141  \n",
       "473       61  \n",
       "\n",
       "[474 rows x 4 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "video_data['Published_date'] = pd.to_datetime(video_data['Published_date']).dt.date\n",
    "video_data['Views'] = pd.to_numeric(video_data['Views'])\n",
    "# video_data['Likes'] = pd.to_numeric(video_data['Likes'])\n",
    "# video_data['Dislikes'] = pd.to_numeric(video_data['Dislikes'])\n",
    "video_data['Views'] = pd.to_numeric(video_data['Views'])\n",
    "video_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "aefaa638",
   "metadata": {},
   "outputs": [],
   "source": [
    "top10_videos = video_data.sort_values(by='Views', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8ccdc503",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Published_date</th>\n",
       "      <th>Views</th>\n",
       "      <th>Comments</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>Re 1. Introduction to Recursion | Recursion Tr...</td>\n",
       "      <td>2021-12-25</td>\n",
       "      <td>953025</td>\n",
       "      <td>389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>Striver's Dynamic Programming Series | The ULT...</td>\n",
       "      <td>2022-01-07</td>\n",
       "      <td>870712</td>\n",
       "      <td>153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>G-1. Introduction to Graph | Types | Different...</td>\n",
       "      <td>2022-08-04</td>\n",
       "      <td>662967</td>\n",
       "      <td>436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>DP 1. Introduction to Dynamic Programming | Me...</td>\n",
       "      <td>2022-01-08</td>\n",
       "      <td>641045</td>\n",
       "      <td>2672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>C++ Basics in One Shot - Strivers A2Z DSA Cour...</td>\n",
       "      <td>2022-12-19</td>\n",
       "      <td>630225</td>\n",
       "      <td>685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Complete C++ STL in 1 Video | Time Complexity ...</td>\n",
       "      <td>2022-06-04</td>\n",
       "      <td>554936</td>\n",
       "      <td>1181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>Announcing the FREE ka TREE SERIES  #shorts</td>\n",
       "      <td>2021-08-14</td>\n",
       "      <td>495887</td>\n",
       "      <td>165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>Solve any Pattern Question - Trick Explained |...</td>\n",
       "      <td>2023-01-02</td>\n",
       "      <td>480130</td>\n",
       "      <td>705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>Find Second Largest Element in Array | Remove ...</td>\n",
       "      <td>2023-03-01</td>\n",
       "      <td>473997</td>\n",
       "      <td>494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>437</th>\n",
       "      <td>🔴 Striver's SDE sheet | Take every concept fro...</td>\n",
       "      <td>2020-06-08</td>\n",
       "      <td>469997</td>\n",
       "      <td>571</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 Title Published_date   Views  \\\n",
       "243  Re 1. Introduction to Recursion | Recursion Tr...     2021-12-25  953025   \n",
       "236  Striver's Dynamic Programming Series | The ULT...     2022-01-07  870712   \n",
       "166  G-1. Introduction to Graph | Types | Different...     2022-08-04  662967   \n",
       "235  DP 1. Introduction to Dynamic Programming | Me...     2022-01-08  641045   \n",
       "110  C++ Basics in One Shot - Strivers A2Z DSA Cour...     2022-12-19  630225   \n",
       "167  Complete C++ STL in 1 Video | Time Complexity ...     2022-06-04  554936   \n",
       "307        Announcing the FREE ka TREE SERIES  #shorts     2021-08-14  495887   \n",
       "108  Solve any Pattern Question - Trick Explained |...     2023-01-02  480130   \n",
       "102  Find Second Largest Element in Array | Remove ...     2023-03-01  473997   \n",
       "437  🔴 Striver's SDE sheet | Take every concept fro...     2020-06-08  469997   \n",
       "\n",
       "    Comments  \n",
       "243      389  \n",
       "236      153  \n",
       "166      436  \n",
       "235     2672  \n",
       "110      685  \n",
       "167     1181  \n",
       "307      165  \n",
       "108      705  \n",
       "102      494  \n",
       "437      571  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top10_videos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "56fb165b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\HARSHIT TRIPATHI\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\pylabtools.py:151: UserWarning: Glyph 128308 (\\N{LARGE RED CIRCLE}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax1 = sns.barplot(x='Views', y='Title', data=top10_videos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ccacdaf0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Published_date</th>\n",
       "      <th>Views</th>\n",
       "      <th>Comments</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>L28. Design a Browser History | LinkedList Imp...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>15581</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>L27. Clone a LinkedList with Next and Random P...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>4538</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>L26. Sort a Linked List | Merge Sort and Brute...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>6236</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>L24. Flattening a LinkedList | Multiple Approa...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>4971</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>L25. Merge K Sorted Lists | Multiple Approaches</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>3691</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>How to get an internship at Amazon | Internshi...</td>\n",
       "      <td>2020-04-09</td>\n",
       "      <td>130344</td>\n",
       "      <td>258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>How to approach people at Linkedin | How to bu...</td>\n",
       "      <td>2020-04-04</td>\n",
       "      <td>31786</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>Experience with Scaler Academy | More insights...</td>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>170979</td>\n",
       "      <td>607</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>Longest Increasing Subsequence NlogN approach</td>\n",
       "      <td>2020-03-29</td>\n",
       "      <td>66579</td>\n",
       "      <td>141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>Equal Average Partition Dynamic Programming</td>\n",
       "      <td>2020-03-23</td>\n",
       "      <td>21908</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>474 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 Title Published_date   Views  \\\n",
       "0    L28. Design a Browser History | LinkedList Imp...     2024-01-01   15581   \n",
       "1    L27. Clone a LinkedList with Next and Random P...     2024-01-01    4538   \n",
       "2    L26. Sort a Linked List | Merge Sort and Brute...     2024-01-01    6236   \n",
       "3    L24. Flattening a LinkedList | Multiple Approa...     2024-01-01    4971   \n",
       "4      L25. Merge K Sorted Lists | Multiple Approaches     2024-01-01    3691   \n",
       "..                                                 ...            ...     ...   \n",
       "469  How to get an internship at Amazon | Internshi...     2020-04-09  130344   \n",
       "470  How to approach people at Linkedin | How to bu...     2020-04-04   31786   \n",
       "471  Experience with Scaler Academy | More insights...     2020-04-01  170979   \n",
       "472      Longest Increasing Subsequence NlogN approach     2020-03-29   66579   \n",
       "473        Equal Average Partition Dynamic Programming     2020-03-23   21908   \n",
       "\n",
       "    Comments  \n",
       "0         61  \n",
       "1         13  \n",
       "2          9  \n",
       "3         19  \n",
       "4         14  \n",
       "..       ...  \n",
       "469      258  \n",
       "470       74  \n",
       "471      607  \n",
       "472      141  \n",
       "473       61  \n",
       "\n",
       "[474 rows x 4 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "video_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c84256b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "video_data['Month'] = pd.to_datetime(video_data['Published_date']).dt.strftime('%b')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c539398c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Published_date</th>\n",
       "      <th>Views</th>\n",
       "      <th>Comments</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>L28. Design a Browser History | LinkedList Imp...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>15581</td>\n",
       "      <td>61</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>L27. Clone a LinkedList with Next and Random P...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>4538</td>\n",
       "      <td>13</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>L26. Sort a Linked List | Merge Sort and Brute...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>6236</td>\n",
       "      <td>9</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>L24. Flattening a LinkedList | Multiple Approa...</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>4971</td>\n",
       "      <td>19</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>L25. Merge K Sorted Lists | Multiple Approaches</td>\n",
       "      <td>2024-01-01</td>\n",
       "      <td>3691</td>\n",
       "      <td>14</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>How to get an internship at Amazon | Internshi...</td>\n",
       "      <td>2020-04-09</td>\n",
       "      <td>130344</td>\n",
       "      <td>258</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>How to approach people at Linkedin | How to bu...</td>\n",
       "      <td>2020-04-04</td>\n",
       "      <td>31786</td>\n",
       "      <td>74</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>Experience with Scaler Academy | More insights...</td>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>170979</td>\n",
       "      <td>607</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>Longest Increasing Subsequence NlogN approach</td>\n",
       "      <td>2020-03-29</td>\n",
       "      <td>66579</td>\n",
       "      <td>141</td>\n",
       "      <td>Mar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>Equal Average Partition Dynamic Programming</td>\n",
       "      <td>2020-03-23</td>\n",
       "      <td>21908</td>\n",
       "      <td>61</td>\n",
       "      <td>Mar</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>474 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 Title Published_date   Views  \\\n",
       "0    L28. Design a Browser History | LinkedList Imp...     2024-01-01   15581   \n",
       "1    L27. Clone a LinkedList with Next and Random P...     2024-01-01    4538   \n",
       "2    L26. Sort a Linked List | Merge Sort and Brute...     2024-01-01    6236   \n",
       "3    L24. Flattening a LinkedList | Multiple Approa...     2024-01-01    4971   \n",
       "4      L25. Merge K Sorted Lists | Multiple Approaches     2024-01-01    3691   \n",
       "..                                                 ...            ...     ...   \n",
       "469  How to get an internship at Amazon | Internshi...     2020-04-09  130344   \n",
       "470  How to approach people at Linkedin | How to bu...     2020-04-04   31786   \n",
       "471  Experience with Scaler Academy | More insights...     2020-04-01  170979   \n",
       "472      Longest Increasing Subsequence NlogN approach     2020-03-29   66579   \n",
       "473        Equal Average Partition Dynamic Programming     2020-03-23   21908   \n",
       "\n",
       "    Comments Month  \n",
       "0         61   Jan  \n",
       "1         13   Jan  \n",
       "2          9   Jan  \n",
       "3         19   Jan  \n",
       "4         14   Jan  \n",
       "..       ...   ...  \n",
       "469      258   Apr  \n",
       "470       74   Apr  \n",
       "471      607   Apr  \n",
       "472      141   Mar  \n",
       "473       61   Mar  \n",
       "\n",
       "[474 rows x 5 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "video_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "62b8eed5",
   "metadata": {},
   "outputs": [],
   "source": [
    "videos_per_month = video_data.groupby('Month', as_index=False).size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8fc5f839",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apr</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Aug</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Feb</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Jan</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Jul</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Jun</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Mar</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>May</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Nov</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Oct</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Sep</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Month  size\n",
       "0    Apr    67\n",
       "1    Aug    74\n",
       "2    Dec    17\n",
       "3    Feb    30\n",
       "4    Jan    30\n",
       "5    Jul    15\n",
       "6    Jun    40\n",
       "7    Mar    41\n",
       "8    May    41\n",
       "9    Nov    38\n",
       "10   Oct    42\n",
       "11   Sep    39"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "videos_per_month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "6ba9292d",
   "metadata": {},
   "outputs": [],
   "source": [
    "sort_order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n",
    "             'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "54e4f291",
   "metadata": {},
   "outputs": [],
   "source": [
    "videos_per_month.index = pd.CategoricalIndex(videos_per_month['Month'], categories=sort_order, ordered=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "006039d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "videos_per_month = videos_per_month.sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "d8dec018",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax2 = sns.barplot(x='Month', y='size', data=videos_per_month)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b8338c32",
   "metadata": {},
   "outputs": [],
   "source": [
    "video_data.to_csv('Video_Details(take U forward).csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49635897",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
